define("./workbox-f9e9c3c2.js",["exports"],(function(e){"use strict";try{self["workbox:core:5.0.0-rc.0"]&&_()}catch(e){}const t=(e,...t)=>{let n=e;return t.length>0&&(n+=` :: ${JSON.stringify(t)}`),n};class n extends Error{constructor(e,n){super(t(e,n)),this.name=e,this.details=n}}try{self["workbox:routing:5.0.0-rc.0"]&&_()}catch(e){}const s="GET",r=e=>e&&"object"==typeof e?e:{handle:e};class i{constructor(e,t,n=s){this.handler=r(t),this.match=e,this.method=n}}class c extends i{constructor(e,t,n){super(({url:t})=>{const n=e.exec(t.href);if(n&&(t.origin===location.origin||0===n.index))return n.slice(1)},t,n)}}const a=e=>{const t=new URL(String(e),location.href);return t.origin===location.origin?t.pathname:t.href};class o{constructor(){this.t=new Map}get routes(){return this.t}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,n=this.handleRequest({request:t,event:e});n&&e.respondWith(n)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data,n=Promise.all(t.urlsToCache.map(e=>{"string"==typeof e&&(e=[e]);const t=new Request(...e);return this.handleRequest({request:t})}));e.waitUntil(n),e.ports&&e.ports[0]&&n.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const n=new URL(e.url,location.href);if(!n.protocol.startsWith("http"))return;let s,{params:r,route:i}=this.findMatchingRoute({url:n,request:e,event:t}),c=i&&i.handler;if(!c&&this.s&&(c=this.s),c){try{s=c.handle({url:n,request:e,event:t,params:r})}catch(e){s=Promise.reject(e)}return s instanceof Promise&&this.i&&(s=s.catch(s=>this.i.handle({url:n,request:e,event:t}))),s}}findMatchingRoute({url:e,request:t,event:n}){const s=this.t.get(t.method)||[];for(const r of s){let s,i=r.match({url:e,request:t,event:n});if(i)return s=i,Array.isArray(i)&&0===i.length?s=void 0:i.constructor===Object&&0===Object.keys(i).length?s=void 0:"boolean"==typeof i&&(s=void 0),{route:r,params:s}}return{}}setDefaultHandler(e){this.s=r(e)}setCatchHandler(e){this.i=r(e)}registerRoute(e){this.t.has(e.method)||this.t.set(e.method,[]),this.t.get(e.method).push(e)}unregisterRoute(e){if(!this.t.has(e.method))throw new n("unregister-route-but-not-found-with-method",{method:e.method});const t=this.t.get(e.method).indexOf(e);if(!(t>-1))throw new n("unregister-route-route-not-registered");this.t.get(e.method).splice(t,1)}}let u;const h=()=>(u||((u=new o).addFetchListener(),u.addCacheListener()),u),l={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:registration.scope},f=e=>[l.prefix,e,l.suffix].filter(e=>e&&e.length>0).join("-"),w={updateDetails:e=>{(e=>{for(const t of Object.keys(l))e(t)})(t=>{"string"==typeof e[t]&&(l[t]=e[t])})},getGoogleAnalyticsName:e=>e||f(l.googleAnalytics),getPrecacheName:e=>e||f(l.precache),getPrefix:()=>l.prefix,getRuntimeName:e=>e||f(l.runtime),getSuffix:()=>l.suffix},d=new Set;const p=(e,t)=>e.filter(e=>t in e),y=async({cacheName:e,request:t,event:n,matchOptions:s,plugins:r=[]})=>{const i=await caches.open(e),c=await m({plugins:r,request:t,mode:"read"});let a=await i.match(c,s);for(const t of r)if("cachedResponseWillBeUsed"in t){const r=t.cachedResponseWillBeUsed;a=await r.call(t,{cacheName:e,event:n,matchOptions:s,cachedResponse:a,request:c})}return a},g=async({request:e,response:t,event:n,plugins:s=[]})=>{let r=t,i=!1;for(let t of s)if("cacheWillUpdate"in t){i=!0;const s=t.cacheWillUpdate;if(!(r=await s.call(t,{request:e,response:r,event:n})))break}return i||(r=r&&200===r.status?r:void 0),r||null},m=async({request:e,mode:t,plugins:n=[]})=>{const s=p(n,"cacheKeyWillBeUsed");let r=e;for(const e of s)"string"==typeof(r=await e.cacheKeyWillBeUsed.call(e,{mode:t,request:r}))&&(r=new Request(r));return r},R={put:async({cacheName:e,request:t,response:s,event:r,plugins:i=[],matchOptions:c})=>{const o=await m({plugins:i,request:t,mode:"write"});if(!s)throw new n("cache-put-with-no-response",{url:a(o.url)});let u=await g({event:r,plugins:i,response:s,request:o});if(!u)return;const h=await caches.open(e),l=p(i,"cacheDidUpdate");let f=l.length>0?await y({cacheName:e,matchOptions:c,request:o}):null;try{await h.put(o,u)}catch(e){throw"QuotaExceededError"===e.name&&await async function(){for(const e of d)await e()}(),e}for(let t of l)await t.cacheDidUpdate.call(t,{cacheName:e,event:r,oldResponse:f,newResponse:u,request:o})},match:y},v={fetch:async({request:e,fetchOptions:t,event:s,plugins:r=[]})=>{if("string"==typeof e&&(e=new Request(e)),s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const i=p(r,"fetchDidFail"),c=i.length>0?e.clone():null;try{for(let t of r)if("requestWillFetch"in t){const n=t.requestWillFetch,r=e.clone();e=await n.call(t,{request:r,event:s})}}catch(e){throw new n("plugin-error-request-will-fetch",{thrownError:e})}let a=e.clone();try{let n;n="navigate"===e.mode?await fetch(e):await fetch(e,t);for(const e of r)"fetchDidSucceed"in e&&(n=await e.fetchDidSucceed.call(e,{event:s,request:a,response:n}));return n}catch(e){for(const t of i)await t.fetchDidFail.call(t,{error:e,event:s,originalRequest:c.clone(),request:a.clone()});throw e}}};try{self["workbox:strategies:5.0.0-rc.0"]&&_()}catch(e){}let q;async function L(e,t){const n=e.clone(),s={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},r=t?t(s):s,i=function(){if(void 0===q){const e=new Response("");if("body"in e)try{new Response(e.body),q=!0}catch(e){q=!1}q=!1}return q}()?n.body:await n.blob();return new Response(i,r)}try{self["workbox:precaching:5.0.0-rc.0"]&&_()}catch(e){}const U="__WB_REVISION__";function x(e){if(!e)throw new n("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:t,url:s}=e;if(!s)throw new n("add-to-cache-list-unexpected-type",{entry:e});if(!t){const e=new URL(s,location.href);return{cacheKey:e.href,url:e.href}}const r=new URL(s,location.href),i=new URL(s,location.href);return r.searchParams.set(U,t),{cacheKey:r.href,url:i.href}}class N{constructor(e){this.o=w.getPrecacheName(e),this.u=new Map,this.h=new Map,this.l=new Map}addToCacheList(e){for(const t of e){const{cacheKey:e,url:s}=x(t),r="string"!=typeof t&&t.revision?"reload":"default";if(this.u.has(s)&&this.u.get(s)!==e)throw new n("add-to-cache-list-conflicting-entries",{firstEntry:this.u.get(s),secondEntry:e});if("string"!=typeof t&&t.integrity){if(this.l.has(e)&&this.l.get(e)!==t.integrity)throw new n("add-to-cache-list-conflicting-integrities",{url:s});this.l.set(e,t.integrity)}this.u.set(s,e),this.h.set(s,r)}}async install({event:e,plugins:t}={}){const n=[],s=[],r=await caches.open(this.o),i=await r.keys(),c=new Set(i.map(e=>e.url));for(const[e,t]of this.u)c.has(t)?s.push(e):n.push({cacheKey:t,url:e});const a=n.map(({cacheKey:n,url:s})=>{const r=this.l.get(n),i=this.h.get(s);return this.p({cacheKey:n,cacheMode:i,event:e,integrity:r,plugins:t,url:s})});return await Promise.all(a),{updatedURLs:n.map(e=>e.url),notUpdatedURLs:s}}async activate(){const e=await caches.open(this.o),t=await e.keys(),n=new Set(this.u.values()),s=[];for(const r of t)n.has(r.url)||(await e.delete(r),s.push(r.url));return{deletedURLs:s}}async p({cacheKey:e,url:t,cacheMode:s,event:r,plugins:i,integrity:c}){const a=new Request(t,{integrity:c,cache:s,credentials:"same-origin"});let o,u=await v.fetch({event:r,plugins:i,request:a});for(const e of i||[])"cacheWillUpdate"in e&&(o=e);if(!(o?o.cacheWillUpdate({event:r,request:a,response:u}):u.status<400))throw new n("bad-precaching-response",{url:t,status:u.status});u.redirected&&(u=await L(u)),await R.put({event:r,plugins:i,response:u,request:e===t?a:new Request(e),cacheName:this.o,matchOptions:{ignoreSearch:!0}})}getURLsToCacheKeys(){return this.u}getCachedURLs(){return[...this.u.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this.u.get(t.href)}async matchPrecache(e){const t=e instanceof Request?e.url:e,n=this.getCacheKeyForURL(t);if(n){return(await caches.open(this.o)).match(n)}}createHandler(e=!0){return async({request:t})=>{try{const e=await this.matchPrecache(t);if(e)return e;throw new n("missing-precache-entry",{cacheName:this.o,url:t.url})}catch(n){if(e)return fetch(t);throw n}}}createHandlerBoundToURL(e,t=!0){if(!this.getCacheKeyForURL(e))throw new n("non-precached-url",{url:e});const s=this.createHandler(t),r=new Request(e);return()=>s({request:r})}}let E;const M=()=>(E||(E=new N),E);const O=(e,t)=>{const n=M().getURLsToCacheKeys();for(const s of function*(e,{ignoreURLParametersMatching:t,directoryIndex:n,cleanURLs:s,urlManipulation:r}={}){const i=new URL(e,location.href);i.hash="",yield i.href;const c=function(e,t=[]){for(const n of[...e.searchParams.keys()])t.some(e=>e.test(n))&&e.searchParams.delete(n);return e}(i,t);if(yield c.href,n&&c.pathname.endsWith("/")){const e=new URL(c.href);e.pathname+=n,yield e.href}if(s){const e=new URL(c.href);e.pathname+=".html",yield e.href}if(r){const e=r({url:i});for(const t of e)yield t.href}}(e,t)){const e=n.get(s);if(e)return e}};let b=!1;const K=e=>{b||((({ignoreURLParametersMatching:e=[/^utm_/],directoryIndex:t="index.html",cleanURLs:n=!0,urlManipulation:s}={})=>{const r=w.getPrecacheName();addEventListener("fetch",i=>{const c=O(i.request.url,{cleanURLs:n,directoryIndex:t,ignoreURLParametersMatching:e,urlManipulation:s});if(!c)return;let a=caches.open(r).then(e=>e.match(c)).then(e=>e||fetch(c));i.respondWith(a)})})(e),b=!0)},P=[],S={get:()=>P,add(e){P.push(...e)}},C=e=>{const t=M(),n=S.get();e.waitUntil(t.install({event:e,plugins:n}).catch(e=>{throw e}))},F=e=>{const t=M();e.waitUntil(t.activate())};e.CacheFirst=class{constructor(e={}){this.o=w.getRuntimeName(e.cacheName),this.g=e.plugins||[],this.m=e.fetchOptions,this.R=e.matchOptions}async handle({event:e,request:t}){let s,r=await R.match({cacheName:this.o,request:t,event:e,matchOptions:this.R,plugins:this.g});if(!r)try{r=await this.v(t,e)}catch(e){s=e}if(!r)throw new n("no-response",{url:t.url,error:s});return r}async v(e,t){const n=await v.fetch({request:e,event:t,fetchOptions:this.m,plugins:this.g}),s=n.clone(),r=R.put({cacheName:this.o,request:e,response:s,event:t,plugins:this.g});if(t)try{t.waitUntil(r)}catch(e){}return n}},e.cleanupOutdatedCaches=()=>{addEventListener("activate",e=>{const t=w.getPrecacheName();e.waitUntil((async(e,t="-precache-")=>{const n=(await caches.keys()).filter(n=>n.includes(t)&&n.includes(self.registration.scope)&&n!==e);return await Promise.all(n.map(e=>caches.delete(e))),n})(t).then(e=>{}))})},e.clientsClaim=()=>{addEventListener("activate",()=>self.clients.claim())},e.precacheAndRoute=(e,t)=>{(e=>{M().addToCacheList(e),e.length>0&&(addEventListener("install",C),addEventListener("activate",F))})(e),K(t)},e.registerRoute=(e,t,s)=>{let r;if("string"==typeof e){const n=new URL(e,location.href);r=new i(({url:e})=>e.href===n.href,t,s)}else if(e instanceof RegExp)r=new c(e,t,s);else if("function"==typeof e)r=new i(e,t,s);else{if(!(e instanceof i))throw new n("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});r=e}return h().registerRoute(r),r},e.skipWaiting=()=>{addEventListener("install",()=>self.skipWaiting())}}));
